ifeq ($(SUBTARGET),xrx500)

define Device/AX3000_1600_VDSL35B_11AX_SEC
  $(Device/xrx500)
  DEVICE_DTS := easy350_anywan_axepoint
  DEVICE_TITLE := AX3000 1600 AXEPOINT 6X WAV600 VDSL35B Secure Gateway
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(VOIP_PACKAGES_SLIC200_MAIN) $(DECT_PACKAGES_SEC) $(WAV600_PACKAGES_UCI) $(WAV600_UGW_PACKAGES_UCI) $(UGW_PACKAGE_OVL_WHITELIST_SEC) \
                    $(DSL_CPE_UGW_PACKAGE) $(DSL_CPE_PACKAGES_R5) $(DSL_CPE_PACKAGES_RELEASE) \
                    $(AX_PACKAGES) $(REPEATER_PACKAGES) $(GUEST_ACCESS_PACKAGES) $(UGW_DIAG_DSL_PACKAGES)
endef
TARGET_DEVICES += AX3000_1600_VDSL35B_11AX_SEC

define Device/AX3000_1600_VDSL35B_11AX_SEC_DEBUG
  $(Device/xrx500)
  DEVICE_DTS := easy350_anywan_axepoint
  DEVICE_TITLE := AX3000 1600 AXEPOINT 6X WAV600 VDSL35B Debug Secure Gateway
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(UGW_PACKAGES_SEC_DEBUG) $(VOIP_PACKAGES_SLIC200_MAIN) $(DECT_PACKAGES_SEC) $(DECT_PACKAGES_SEC_DEBUG) \
                    $(WAV600_PACKAGES_UCI_DEBUG) $(WAV600_UGW_PACKAGES_UCI_DEBUG) \
                    $(DSL_CPE_UGW_PACKAGE) $(DSL_CPE_PACKAGES_R5) $(DSL_CPE_PACKAGES_DEBUG) \
                    $(AX_PACKAGES) $(REPEATER_PACKAGES) $(GUEST_ACCESS_PACKAGES_DEBUG) $(UGW_DIAG_DSL_PACKAGES)
endef
TARGET_DEVICES += AX3000_1600_VDSL35B_11AX_SEC_DEBUG

define Device/AX3000_1600_ETH_11AX_SEC
  $(Device/xrx500)
  DEVICE_DTS := easy350_anywan_axepoint_rt
  DEVICE_TITLE := AX3000 1600 AXEPOINT 6X WAV600 Ethernet Secure Router
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(UGW_DIAG_PACKAGES) $(WAV600_PACKAGES_UCI) $(WAV600_UGW_PACKAGES_UCI) $(UGW_PACKAGE_OVL_WHITELIST_SEC) $(AX_PACKAGES) $(REPEATER_PACKAGES) $(GUEST_ACCESS_PACKAGES)
endef
TARGET_DEVICES += AX3000_1600_ETH_11AX_SEC

define Device/AX3000_1600_ETH_11AX_SEC_DEBUG
  $(Device/xrx500)
  DEVICE_DTS := easy350_anywan_axepoint_rt
  DEVICE_TITLE := AX3000 1600 AXEPOINT 6X WAV600 Ethernet Debug Secure Router
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(UGW_DIAG_PACKAGES) $(UGW_PACKAGES_SEC_DEBUG) $(WAV600_PACKAGES_UCI_DEBUG) $(WAV600_UGW_PACKAGES_UCI_DEBUG) $(RT_PACKAGES_DEBUG) $(AX_PACKAGES) $(REPEATER_PACKAGES) $(GUEST_ACCESS_PACKAGES_DEBUG)
endef
TARGET_DEVICES += AX3000_1600_ETH_11AX_SEC_DEBUG

define Device/AX3000_1600_ETH_11AXUCI
  $(Device/xrx500)
  DEVICE_DTS := easy350_anywan_axepoint
  DEVICE_TITLE := GRX350 1600 AXEPOINT 6X WAV600 Ethernet Router UCI Model
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SDL) $(WAV600_PACKAGES_UCI) $(WAV600_UGW_PACKAGES_UCI)
endef
TARGET_DEVICES += AX3000_1600_ETH_11AXUCI

define Device/AX6000_2000_ETH_11AXUCI
  $(Device/xrx500)
  DEVICE_DTS := easy550_anywan_axepoint
  DEVICE_TITLE := GRX550 2000 AXEPOINT 6X WAV600 Ethernet Gateway UCI Model
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SDL) $(WAV600_PACKAGES_UCI) $(WAV600_UGW_PACKAGES_UCI)
endef
TARGET_DEVICES += AX6000_2000_ETH_11AXUCI

define Device/AX3000_1600_ETH_11AXUCI_ASURADA
  $(Device/xrx500)
  DEVICE_DTS := easy350_anywan_axepoint_asurada
  DEVICE_TITLE := GRX350 1600 AXEPOINT 6X WAV600 Ethernet Router UCI Model
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SDL) $(WAV600_PACKAGES_UCI) $(WAV600_UGW_PACKAGES_UCI)
endef
TARGET_DEVICES += AX3000_1600_ETH_11AXUCI_ASURADA

define Device/AX3000_1600_GFAST_11AX_SEC
  $(Device/xrx500)
  DEVICE_DTS := easy350_anywan_axepoint
  DEVICE_TITLE := AX3000 1600 AXEPOINT 6X WAV600 GFAST  Secure Gateway
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(VOIP_PACKAGES_SLIC200_MAIN) $(DECT_PACKAGES_SEC) $(WAV600_PACKAGES_UCI) $(WAV600_UGW_PACKAGES_UCI) $(UGW_PACKAGE_OVL_WHITELIST_SEC) \
                    $(DSL_CPE_GFAST_PACKAGES) $(DSL_CPE_GFAST_PACKAGES_RELEASE) $(AX_PACKAGES) $(UGW_DIAG_DSL_PACKAGES)
endef
TARGET_DEVICES += AX3000_1600_GFAST_11AX_SEC

define Device/AX3000_1600_GFAST_11AX_SEC_DEBUG
  $(Device/xrx500)
  DEVICE_DTS := easy350_anywan_axepoint
  DEVICE_TITLE := AX3000 1600 AXEPOINT 6X WAV600 GFAST  Secure Gateway
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(UGW_PACKAGES_SEC_DEBUG) $(VOIP_PACKAGES_SLIC200_MAIN) $(DSL_CPE_GFAST_PACKAGES) $(DSL_CPE_GFAST_PACKAGES_DEBUG) $(DECT_PACKAGES_SEC) \
                    $(DECT_PACKAGES_SEC_DEBUG) $(WAV600_PACKAGES_UCI_DEBUG) $(WAV600_UGW_PACKAGES_UCI_DEBUG) $(AX_PACKAGES) $(UGW_DIAG_DSL_PACKAGES)
endef
TARGET_DEVICES += AX3000_1600_GFAST_11AX_SEC_DEBUG

define Device/AX6000_2000_ETH_11AX_SEC
  $(Device/xrx500)
  DEVICE_DTS := easy550_anywan_axepoint_rt
  DEVICE_TITLE := AX6000 2000 AXEPOINT 6X WAV600 Ethernet Secure Router
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(UGW_DIAG_PACKAGES) $(WAV600_PACKAGES_UCI) $(WAV600_UGW_PACKAGES_UCI) $(UGW_PACKAGE_OVL_WHITELIST_SEC) $(AX_PACKAGES) $(REPEATER_PACKAGES) $(GUEST_ACCESS_PACKAGES)
endef
TARGET_DEVICES += AX6000_2000_ETH_11AX_SEC

define Device/AX6000_2000_ETH_11AX_SEC_DEBUG
  $(Device/xrx500)
  DEVICE_DTS := easy550_anywan_axepoint_rt
  DEVICE_TITLE := AX6000 2000 AXEPOINT 6X WAV600 Ethernet Debug Secure Router
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(UGW_DIAG_PACKAGES) $(UGW_PACKAGES_SEC_DEBUG) \
                    $(WAV600_PACKAGES_UCI_DEBUG) $(WAV600_UGW_PACKAGES_UCI_DEBUG) $(AX_PACKAGES) $(REPEATER_PACKAGES) $(GUEST_ACCESS_PACKAGES_DEBUG)
endef
TARGET_DEVICES += AX6000_2000_ETH_11AX_SEC_DEBUG

define Device/AX6000_2000_VDSL35B_11AX_SEC
  $(Device/xrx500)
  DEVICE_DTS := easy550_anywan_axepoint
  DEVICE_TITLE := AX6000 2000 AXEPOINT 6X WAV600 VDSL35B Secure Gateway
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(VOIP_PACKAGES_SLIC200_MAIN) $(DECT_PACKAGES_SEC) $(WAV600_PACKAGES_UCI) $(WAV600_UGW_PACKAGES_UCI) $(UGW_PACKAGE_OVL_WHITELIST_SEC) \
                    $(DSL_CPE_UGW_PACKAGE) $(DSL_CPE_PACKAGES_R5) $(DSL_CPE_PACKAGES_RELEASE) $(AX_PACKAGES) $(REPEATER_PACKAGES) $(GUEST_ACCESS_PACKAGES) $(UGW_DIAG_DSL_PACKAGES)
endef
TARGET_DEVICES += AX6000_2000_VDSL35B_11AX_SEC

define Device/AX6000_2000_VDSL35B_11AX_SEC_DEBUG
  $(Device/xrx500)
  DEVICE_DTS := easy550_anywan_axepoint
  DEVICE_TITLE := AX6000 2000 AXEPOINT 6X WAV600 VDSL35B Debug Secure Gateway
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(UGW_PACKAGES_SEC_DEBUG) $(DSL_CPE_UGW_PACKAGE) $(DSL_CPE_PACKAGES_R5) $(DSL_CPE_PACKAGES_DEBUG) $(VOIP_PACKAGES_SLIC200_MAIN) \
                    $(DECT_PACKAGES_SEC) $(DECT_PACKAGES_SEC_DEBUG) $(AX_PACKAGES) $(WAV600_PACKAGES_UCI_DEBUG) \
                    $(WAV600_UGW_PACKAGES_UCI_DEBUG) $(REPEATER_PACKAGES) $(GUEST_ACCESS_PACKAGES_DEBUG) $(UGW_DIAG_DSL_PACKAGES)
endef
TARGET_DEVICES += AX6000_2000_VDSL35B_11AX_SEC_DEBUG

define Device/AX6000_2000_GFAST_11AX_SEC
  $(Device/xrx500)
  DEVICE_DTS := easy550_anywan_axepoint
  DEVICE_TITLE := AX6000 2000 AXEPOINT 6X WAV600 G.Fast Secure Gateway
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(VOIP_PACKAGES_SLIC200_MAIN) $(DECT_PACKAGES_SEC) $(WAV600_PACKAGES_UCI) $(WAV600_UGW_PACKAGES_UCI) $(UGW_PACKAGE_OVL_WHITELIST_SEC) \
                    $(DSL_CPE_GFAST_PACKAGES) $(DSL_CPE_GFAST_PACKAGES_RELEASE) $(AX_PACKAGES) $(UGW_DIAG_DSL_PACKAGES)
endef
TARGET_DEVICES += AX6000_2000_GFAST_11AX_SEC

define Device/AX6000_2000_GFAST_11AX_SEC_BND
  $(Device/xrx500)
  DEVICE_DTS := easy550_anywan_axepoint
  DEVICE_TITLE := AX6000 2000 AXEPOINT 6X WAV600 G.Fast bond Secure Gateway
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(VOIP_PACKAGES_SLIC200_MAIN) $(DECT_PACKAGES_SEC) $(WAV600_PACKAGES_UCI) $(WAV600_UGW_PACKAGES_UCI) $(DSL_CPE_GFAST_PACKAGES) \
                    $(DSL_CPE_GFAST_PACKAGES_RELEASE_BND) $(AX_PACKAGES) $(UGW_DIAG_DSL_PACKAGES)
endef
TARGET_DEVICES += AX6000_2000_GFAST_11AX_SEC_BND

define Device/AX6000_2000_GFAST_11AX_SEC_DEBUG
  $(Device/xrx500)
  DEVICE_DTS := easy550_anywan_axepoint
  DEVICE_TITLE := AX6000 2000 AXEPOINT 6X WAV600 G.Fast Debug Secure Gateway
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(UGW_PACKAGES_SEC_DEBUG) $(VOIP_PACKAGES_SLIC200_MAIN) $(DSL_CPE_GFAST_PACKAGES) $(DSL_CPE_GFAST_PACKAGES_DEBUG) $(DECT_PACKAGES_SEC) \
                    $(DECT_PACKAGES_SEC_DEBUG) $(AX_PACKAGES) $(WAV600_PACKAGES_UCI_DEBUG) $(WAV600_UGW_PACKAGES_UCI_DEBUG) \
                    $(UGW_DIAG_DSL_PACKAGES)
endef
TARGET_DEVICES += AX6000_2000_GFAST_11AX_SEC_DEBUG

define Device/AX3000_1600_ETH_11AX_SEC_WAVE600-2-PDXP
  $(Device/xrx500)
  DEVICE_DTS := easy350_anywan_axepoint_rt
  DEVICE_TITLE := AX3000 1600 AXEPOINT 6X WAV600-2 PDXP Ethernet Secure Router
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(UGW_DIAG_PACKAGES) $(WAV600_PACKAGES_UCI) $(WAV600_UGW_PACKAGES_UCI) $(UGW_PACKAGE_OVL_WHITELIST_SEC) $(AX_PACKAGES) $(WAVE600-2-PDXP_PACKAGES) $(REPEATER_PACKAGES) $(GUEST_ACCESS_PACKAGES)
endef
TARGET_DEVICES += AX3000_1600_ETH_11AX_SEC_WAVE600-2-PDXP

define Device/AX3000_1600_ETH_11AX_SEC_WAVE600-2-PDXP_DEBUG
  $(Device/xrx500)
  DEVICE_DTS := easy350_anywan_axepoint_rt
  DEVICE_TITLE := AX3000 1600 AXEPOINT 6X WAV600-2 PDXP Ethernet Debug Secure Router
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(UGW_DIAG_PACKAGES) $(UGW_PACKAGES_SEC_DEBUG) $(WAV600_PACKAGES_UCI_DEBUG) $(WAV600_UGW_PACKAGES_UCI_DEBUG) $(RT_PACKAGES_DEBUG) $(AX_PACKAGES) $(WAVE600-2-PDXP_PACKAGES) $(REPEATER_PACKAGES) $(GUEST_ACCESS_PACKAGES_DEBUG)
endef
TARGET_DEVICES += AX3000_1600_ETH_11AX_SEC_WAVE600-2-PDXP_DEBUG

define Device/AX3000_1600_ETH_11AX_SEC_WAVE600-2-FPGA
  $(Device/xrx500)
  DEVICE_DTS := easy350_anywan_axepoint_rt
  DEVICE_TITLE := AX3000 1600 AXEPOINT 6X WAV600-2 FPGA Ethernet Secure Router
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(UGW_DIAG_PACKAGES) $(WAV600_PACKAGES_UCI) $(WAV600_UGW_PACKAGES_UCI) $(UGW_PACKAGE_OVL_WHITELIST_SEC) $(AX_PACKAGES) $(WAVE600-2-FPGA_PACKAGES) $(REPEATER_PACKAGES) $(GUEST_ACCESS_PACKAGES)
endef
TARGET_DEVICES += AX3000_1600_ETH_11AX_SEC_WAVE600-2-FPGA

define Device/AX3000_1600_ETH_11AX_SEC_WAVE600-2-FPGA_DEBUG
  $(Device/xrx500)
  DEVICE_DTS := easy350_anywan_axepoint_rt
  DEVICE_TITLE := AX3000 1600 AXEPOINT 6X WAV600-2 FPGA Ethernet Debug Secure Router
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(UGW_DIAG_PACKAGES) $(UGW_PACKAGES_SEC_DEBUG) $(WAV600_PACKAGES_UCI_DEBUG) $(WAV600_UGW_PACKAGES_UCI_DEBUG) $(RT_PACKAGES_DEBUG) $(AX_PACKAGES) $(WAVE600-2-FPGA_PACKAGES) $(REPEATER_PACKAGES) $(GUEST_ACCESS_PACKAGES_DEBUG)
endef
TARGET_DEVICES += AX3000_1600_ETH_11AX_SEC_WAVE600-2-FPGA_DEBUG

-include test_axp.mk

endif
