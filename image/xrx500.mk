ifeq ($(SUBTARGET),xrx500)

FAKEROOT_PROG:=$(if $(CONFIG_PACKAGE_ugw-fakeroot), \
	ALTPATH="$(STAGING_DIR_ROOT)" CONFFILE="$(STAGING_DIR_HOST)/share/fakeroot/fakeroot.conf" \
	fakeroot -- $(STAGING_DIR_HOST)/bin/fakeroot.sh)

define Device/xrx500
  $(Device/lantiqFullImage)
  $(Device/NAND)
  IMAGE_SIZE := 64512k
  KERNEL_LOADADDR := 0xa0020000
  KERNEL_ENTRY := 0xa0020000
  IMAGE_PREFIX := $$(DEVICE_NAME)
  IMAGE_UBOOT := $(if $(SECUREBOOT),grx500-mr-cpe-secboot,grx500-mr-cpe)
endef

define Device/GRX550_2000_VDSL35B_11AC_SEC
  $(Device/xrx500)
  DEVICE_DTS := easy550_anywan
  DEVICE_TITLE := GRX550 2000 11AC Dual Band Wifi VDSL Secure Gateway
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(GRX_PACKAGES) $(DSL_CPE_UGW_PACKAGE) $(DSL_CPE_PACKAGES) \
	$(VOIP_PACKAGES_SLIC200_MAIN) $(DECT_PACKAGES_SEC) $(UGW_DIAG_DSL_PACKAGES)
endef
TARGET_DEVICES += GRX550_2000_VDSL35B_11AC_SEC

define Device/GRX550_2000_VDSL35B_11AC_SEC_DEBUG
  $(Device/xrx500)
  DEVICE_DTS := easy550_anywan
  DEVICE_TITLE := GRX550 2000 11AC Dual Band Wifi VDSL Debug Secure Gateway
  FAKED_ENV := $(FAKEROOT_PROG)
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(UGW_PACKAGES_SEC_DEBUG) $(GRX_PACKAGES) $(DSL_CPE_UGW_PACKAGE) $(DSL_CPE_PACKAGES) $(DSL_CPE_PACKAGES_DEBUG) \
	$(VOIP_PACKAGES_SLIC200_MAIN) $(DECT_PACKAGES_SEC) $(DECT_PACKAGES_SEC_DEBUG) $(UGW_DIAG_DSL_PACKAGES)
endef
TARGET_DEVICES += GRX550_2000_VDSL35B_11AC_SEC_DEBUG

define Device/GRX550_2000_GFAST_11AC_SEC_DEBUG
  $(Device/xrx500)
  DEVICE_DTS := easy550_anywan
  DEVICE_TITLE := GRX550 2000 11AC Dual Band Wifi G.Fast Debug Secure Gateway
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(UGW_DIAG_DSL_PACKAGES) $(UGW_PACKAGES_SEC_DEBUG) $(GRX_PACKAGES) $(DSL_CPE_GFAST_PACKAGES) $(DSL_CPE_GFAST_PACKAGES_DEBUG) \
	$(VOIP_PACKAGES_SLIC200_MAIN) $(DECT_PACKAGES_SEC) $(DECT_PACKAGES_SEC_DEBUG)
endef
TARGET_DEVICES += GRX550_2000_GFAST_11AC_SEC_DEBUG

define Device/GRX550_2000_GFAST_CO_SEC_DEBUG
  $(Device/xrx500)
  DEVICE_DTS := easy550_anywan
  DEVICE_TITLE := GRX550 2000 GFAST CO Debug Secure Gateway
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(UGW_DIAG_DSL_PACKAGES) $(UGW_PACKAGES_SEC_DEBUG) $(GRX_PACKAGES) $(DSL_CPE_GFAST_PACKAGES) $(DSL_CPE_GFAST_PACKAGES_DEBUG) $(GFAST_CO_PACKAGES) \
	$(VOIP_PACKAGES_SLIC200_MAIN) $(DECT_PACKAGES_SEC) $(DECT_PACKAGES_SEC_DEBUG)
endef
TARGET_DEVICES += GRX550_2000_GFAST_CO_SEC_DEBUG

define Device/GRX500_EVM_GFAST_SEC_DEBUG
  $(Device/xrx500)
  DEVICE_DTS := grx500_evm_gfast
  DEVICE_TITLE := GRX500 Evaluation Board GFAST Debug Secure Gateway
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(UGW_DIAG_DSL_PACKAGES) $(UGW_PACKAGES_SEC_DEBUG) $(GRX_PACKAGES) $(DSL_CPE_GFAST_PACKAGES) $(DSL_CPE_GFAST_PACKAGES_DEBUG) \
	$(VOIP_PACKAGES_SLIC200_MAIN) $(DECT_PACKAGES_SEC) $(DECT_PACKAGES_SEC_DEBUG)
endef
TARGET_DEVICES += GRX500_EVM_GFAST_SEC_DEBUG

define Device/GRX500_EVM_VDSL35B_SEC_DEBUG
  $(Device/xrx500)
  DEVICE_DTS := grx500_evm_vdsl35b
  DEVICE_TITLE := GRX500 Evaluation Board VDSL35b Debug Secure Gateway
  ROOTFS_PREPARE := add-servicelayer-schema
  DEVICE_PACKAGES := $(UGW_PACKAGES_SEC) $(UGW_PACKAGES_SEC_DEBUG) $(GRX_PACKAGES) $(DSL_CPE_UGW_PACKAGE) $(DSL_CPE_PACKAGES) $(DSL_CPE_PACKAGES_DEBUG) \
	$(VOIP_PACKAGES_SLIC200_MAIN) $(DECT_PACKAGES_SEC) $(DECT_PACKAGES_SEC_DEBUG) $(UGW_DIAG_DSL_PACKAGES)
endef
TARGET_DEVICES += GRX500_EVM_VDSL35B_SEC_DEBUG

define Device/PHICOMM_K3C
  $(Device/xrx500)
  DEVICE_DTS := phicomm_k3c
  DEVICE_TITLE := Phicomm k3c 11AC Dual Band Wifi OpenWRT Ethernet Router
  DEVICE_PACKAGES := $(OWRT_PACKAGES) $(DSL_CPE_PACKAGES)
endef
TARGET_DEVICES += PHICOMM_K3C

endif

ifeq ($(SUBTARGET),xrx500_4kec)

define Device/easy350550_bootcore
  $(Device/lantiqBootImage)
  IMAGE_SIZE := 16512k
  DEVICE_DTS := easy350550_bootcore
  DEVICE_TITLE := LANTIQ EASY350/550 ANYWAN BOOTCORE
  UIMAGE_NAME := MIPS 4Kec Bootcore
  KERNEL_LOADADDR := 0x88000000
  KERNEL_ENTRY := 0x88000000
endef
TARGET_DEVICES += easy350550_bootcore

endif
